{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "097898ca",
   "metadata": {},
   "source": [
    "# Machine Learning Assignment: \n",
    "\n",
    "1. Understanding the dataset & EDA\n",
    "2. Data preprocessing\n",
    "3. Model training (Logistic Regression & Random Forest)\n",
    "4. Evaluation (accuracy, precision, recall, F1, confusion matrix, ROC)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7486ce89",
   "metadata": {},
   "source": [
    "## 1) Setup & Data Loading"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3c5e0563",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare  \\\n",
       "0            1         0       3    Male  22.0      1      0   7.2500   \n",
       "1            2         1       1  female  38.0      1      0  71.2833   \n",
       "2            3         1       3  female  26.0      0      0   7.9250   \n",
       "3            4         1       1  female  35.0      1      0  53.1000   \n",
       "4            5         0       3    Male  35.0      0      0   8.0500   \n",
       "\n",
       "   Embarked  \n",
       "0         3  \n",
       "1         1  \n",
       "2         3  \n",
       "3         3  \n",
       "4         3  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Import required Python libraries\n",
    "\n",
    "# Numerical operations\n",
    "import numpy as np  \n",
    "\n",
    "# Data manipulation and analysis\n",
    "import pandas as pd  \n",
    "\n",
    "# Data visualization\n",
    "import matplotlib.pyplot as plt  \n",
    "\n",
    "# Import scikit-learn modules for preprocessing, modeling, and evaluation\n",
    "\n",
    "# Splitting data into train/test subsets\n",
    "from sklearn.model_selection import train_test_split  \n",
    "\n",
    "# Helps apply different preprocessing pipelines to numeric vs. categorical columns\n",
    "from sklearn.compose import ColumnTransformer  \n",
    "\n",
    "# Allows chaining preprocessing + model into one pipeline\n",
    "from sklearn.pipeline import Pipeline  \n",
    "\n",
    "# Preprocessing: encode categorical variables (OneHotEncoder) and scale numeric values (StandardScaler)\n",
    "from sklearn.preprocessing import OneHotEncoder, StandardScaler  \n",
    "\n",
    "# Handle missing values by filling with median (numeric) or most frequent (categorical)\n",
    "from sklearn.impute import SimpleImputer  \n",
    "\n",
    "# Evaluation metrics to assess model performance\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score,        # Overall proportion of correct predictions\n",
    "    precision_score,       # Correct positive predictions / all predicted positives\n",
    "    recall_score,          # Correct positive predictions / all actual positives\n",
    "    f1_score,              # Harmonic mean of precision and recall\n",
    "    confusion_matrix,      # Table of true vs. predicted labels\n",
    "    roc_curve,             # ROC curve values\n",
    "    auc,                   # Area Under Curve for ROC\n",
    "    roc_auc_score,         # Direct calculation of ROC AUC\n",
    "    classification_report  # Summary of precision/recall/F1 per class\n",
    ")\n",
    "\n",
    "# ML Algorithms\n",
    "\n",
    "# Logistic Regression: linear classifier for binary/multi-class tasks\n",
    "from sklearn.linear_model import LogisticRegression  \n",
    "\n",
    "# Random Forest: ensemble of decision trees for classification/regression\n",
    "from sklearn.ensemble import RandomForestClassifier  \n",
    "\n",
    "# Path to dataset\n",
    "csv_path = \"C:/Users/mamat/Downloads/SVMtrain.csv\"  \n",
    "\n",
    "# Read CSV file into a Pandas DataFrame\n",
    "df = pd.read_csv(csv_path)  \n",
    "# Quick preview of the dataset\n",
    "# Display the first 5 rows to understand structure, columns, and sample data\n",
    "df.head()  \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37ca6d42",
   "metadata": {},
   "source": [
    "### Dataset dimensions, dtypes, and missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a4dae0ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((889, 9),\n",
       " PassengerId      int64\n",
       " Survived         int64\n",
       " Pclass           int64\n",
       " Sex             object\n",
       " Age            float64\n",
       " SibSp            int64\n",
       " Parch            int64\n",
       " Fare           float64\n",
       " Embarked         int64\n",
       " dtype: object,\n",
       " PassengerId    0\n",
       " Survived       0\n",
       " Pclass         0\n",
       " Sex            0\n",
       " Age            0\n",
       " SibSp          0\n",
       " Parch          0\n",
       " Fare           0\n",
       " Embarked       0\n",
       " dtype: int64)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Understanding the structure is crucial before modeling.\n",
    "df.shape, df.dtypes, df.isna().sum()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a3935ef",
   "metadata": {},
   "source": [
    "## 2) Identify Target & Feature Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "521f8cc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Guessed target column: Survived\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(['PassengerId', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked'],\n",
       " ['Sex'])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Heuristic to guess the target column.\n",
    "def guess_target_column(df: pd.DataFrame):\n",
    "    # Consider handling empty dataframe edge case\n",
    "    candidates = [c for c in df.columns if c.lower() in {\"target\", \"label\", \"y\", \"outcome\", \"class\", \"survived\"}]\n",
    "    if candidates:\n",
    "        return candidates[0]  # Returns first match without priority scoring\n",
    "    \n",
    "    few_unique = [c for c in df.columns if df[c].nunique(dropna=True) <= 5]\n",
    "    if few_unique:\n",
    "        return few_unique[-1]  # Returns last column - arbitrary choice\n",
    "    \n",
    "    return df.columns[-1]  # Simple fallback, may not be optimal\n",
    "\n",
    "target_col = guess_target_column(df)\n",
    "print(\"Guessed target column:\", target_col)  # Informative output\n",
    "\n",
    "feature_cols = [c for c in df.columns if c != target_col]  # Basic feature separation\n",
    "\n",
    "# Separate by data type for appropriate preprocessing later\n",
    "numeric_cols = [c for c in feature_cols if pd.api.types.is_numeric_dtype(df[c])]\n",
    "categorical_cols = [c for c in feature_cols if c not in numeric_cols]  # Mutually exclusive categorization\n",
    "\n",
    "numeric_cols, categorical_cols  # Return both lists\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b63ee8e",
   "metadata": {},
   "source": [
    "## 3) Exploratory Data Analysis (EDA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f069bf0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "      <td>889.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.382452</td>\n",
       "      <td>2.311586</td>\n",
       "      <td>35.686355</td>\n",
       "      <td>0.524184</td>\n",
       "      <td>0.382452</td>\n",
       "      <td>32.096681</td>\n",
       "      <td>2.535433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>256.998173</td>\n",
       "      <td>0.486260</td>\n",
       "      <td>0.834700</td>\n",
       "      <td>17.756733</td>\n",
       "      <td>1.103705</td>\n",
       "      <td>0.806761</td>\n",
       "      <td>49.697504</td>\n",
       "      <td>0.792088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>224.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.895800</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   889.000000  889.000000  889.000000  889.000000  889.000000   \n",
       "mean    446.000000    0.382452    2.311586   35.686355    0.524184   \n",
       "std     256.998173    0.486260    0.834700   17.756733    1.103705   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     224.000000    0.000000    2.000000   22.000000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   32.000000    0.000000   \n",
       "75%     668.000000    1.000000    3.000000   54.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare    Embarked  \n",
       "count  889.000000  889.000000  889.000000  \n",
       "mean     0.382452   32.096681    2.535433  \n",
       "std      0.806761   49.697504    0.792088  \n",
       "min      0.000000    0.000000    1.000000  \n",
       "25%      0.000000    7.895800    2.000000  \n",
       "50%      0.000000   14.454200    3.000000  \n",
       "75%      0.000000   31.000000    3.000000  \n",
       "max      6.000000  512.329200    3.000000  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Summary statistics for numerical columns\n",
    "df.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8e27b3f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived\n",
       "0    549\n",
       "1    340\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# 3.2 Class/target distribution\n",
    "# If the target is categorical or has few unique values, visualize its distribution.\n",
    "df[target_col].value_counts(dropna=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a6f9fd3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x1000 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "#  Visualize distributions of numeric features\n",
    "# Histograms help reveal skewness, outliers, or different scales.\n",
    "_ = df[numeric_cols].hist(bins=30, figsize=(12, 10))\n",
    "plt.tight_layout()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bfd1df59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "#  Visualize counts for categorical features \n",
    "for c in categorical_cols:  # Iterates through each categorical column\n",
    "    plt.figure()  # Creates a new figure for each plot\n",
    "    df[c].value_counts(dropna=False).head(20).plot(kind=\"bar\")  # Gets value counts including NaN, limits to top 20 categories, plots as bar chart\n",
    "    plt.title(f\"Counts for {c}\")  # Sets title with column name\n",
    "    plt.xlabel(c)  # Sets x-axis label as column name\n",
    "    plt.ylabel(\"Count\")  # Sets y-axis label\n",
    "    plt.tight_layout()  # Adjusts layout to prevent label clipping\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b043f901",
   "metadata": {},
   "source": [
    "## 4) Preprocessing & Train/Test Split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b60e67ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Determine if this is likely a classification problem (few unique labels or non-numeric).\n",
    "def is_classification_target(y: pd.Series):\n",
    "    if not pd.api.types.is_numeric_dtype(y):  # Non-numeric data is automatically treated as classification\n",
    "        return True\n",
    "    unique = y.nunique(dropna=True)  # Count unique values excluding NaN\n",
    "    return unique <= max(20, int(0.05 * len(y)))  # Heuristic: either <=20 unique values or <=5% of total samples\n",
    "\n",
    "y = df[target_col]  # Extract target variable\n",
    "X = df[[c for c in df.columns if c != target_col]]  # Extract features (all columns except target)\n",
    "classification = is_classification_target(y)  # Determine problem type\n",
    "\n",
    "# Use stratified split to preserve label distribution when possible.\n",
    "stratify_arg = y if (classification and y.nunique() > 1) else None  # Stratify only for classification with multiple classes\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42, stratify=stratify_arg  # 20% test split, fixed random state for reproducibility\n",
    ")\n",
    "\n",
    "# Preprocessing pipelines:\n",
    "# - Numeric: median imputation + standard scaling\n",
    "# - Categorical: most frequent imputation + one-hot encoding\n",
    "numeric_transformer = Pipeline(steps=[\n",
    "    (\"imputer\", SimpleImputer(strategy=\"median\")),  # Robust to outliers\n",
    "    (\"scaler\", StandardScaler())  # Standardize features to zero mean and unit variance\n",
    "])\n",
    "\n",
    "categorical_transformer = Pipeline(steps=[\n",
    "    (\"imputer\", SimpleImputer(strategy=\"most_frequent\")),  # Fill missing with mode\n",
    "    (\"onehot\", OneHotEncoder(handle_unknown=\"ignore\"))  # Convert categories to binary columns, ignore unseen categories\n",
    "])\n",
    "\n",
    "preprocess = ColumnTransformer(\n",
    "    transformers=[\n",
    "        (\"num\", numeric_transformer, numeric_cols),  # Apply numeric pipeline to numeric columns\n",
    "        (\"cat\", categorical_transformer, categorical_cols),  # Apply categorical pipeline to categorical columns\n",
    "    ]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01675dc2",
   "metadata": {},
   "source": [
    "## 5) Modeling (Logistic Regression & Random Forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2b486469",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Build two baseline supervised models for comparison.\n",
    "logreg = Pipeline(steps=[\n",
    "    (\"preprocess\", preprocess),  # Applies the same preprocessing pipeline\n",
    "    (\"model\", LogisticRegression(max_iter=1000))  # Linear model with increased iteration limit for convergence\n",
    "])\n",
    "\n",
    "rf = Pipeline(steps=[\n",
    "    (\"preprocess\", preprocess),  # Shared preprocessing ensures fair comparison\n",
    "    (\"model\", RandomForestClassifier(random_state=42))  # Ensemble model with fixed random state for reproducibility\n",
    "])\n",
    "\n",
    "# Train models\n",
    "logreg.fit(X_train, y_train)  # Fits both preprocessing and logistic regression\n",
    "rf.fit(X_train, y_train)  # Fits both preprocessing and random forest\n",
    "\n",
    "# Predict on test set\n",
    "y_pred_lr = logreg.predict(X_test)  # Generate predictions using logistic regression pipeline\n",
    "y_pred_rf = rf.predict(X_test)  # Generate predictions using random forest pipeline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a75c4d1a",
   "metadata": {},
   "source": [
    "## 6) Evaluation Metrics & Visualizations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "dbd0832a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic Regression: {'accuracy': 0.8146067415730337, 'precision': 0.7868852459016393, 'recall': 0.7058823529411765, 'f1': 0.7441860465116279}\n",
      "Random Forest: {'accuracy': 0.8089887640449438, 'precision': 0.765625, 'recall': 0.7205882352941176, 'f1': 0.7424242424242424}\n"
     ]
    }
   ],
   "source": [
    "# Choose averaging mode depending on binary or multi-class target\n",
    "average_type = \"binary\"  # Default to binary classification averaging\n",
    "if pd.Series(y_test).nunique() > 2:  # Check if target has more than 2 unique classes\n",
    "    average_type = \"macro\"  # Use macro averaging for multi-class problems\n",
    "\n",
    "# Define safe metric functions with zero_division handling\n",
    "def safe_precision(y_true, y_pred):\n",
    "    return precision_score(y_true, y_pred, average=average_type, zero_division=0)  # Returns 0 instead of undefined precision\n",
    "\n",
    "def safe_recall(y_true, y_pred):\n",
    "    return recall_score(y_true, y_pred, average=average_type, zero_division=0)  # Returns 0 instead of undefined recall\n",
    "\n",
    "def safe_f1(y_true, y_pred):\n",
    "    return f1_score(y_true, y_pred, average=average_type, zero_division=0)  # Returns 0 instead of undefined F1\n",
    "\n",
    "# Calculate metrics for logistic regression\n",
    "metrics_lr = {\n",
    "    \"accuracy\": float(accuracy_score(y_test, y_pred_lr)),  # Convert to float for consistent serialization\n",
    "    \"precision\": float(safe_precision(y_test, y_pred_lr)),  # Precision with safe handling\n",
    "    \"recall\": float(safe_recall(y_test, y_pred_lr)),  # Recall with safe handling\n",
    "    \"f1\": float(safe_f1(y_test, y_pred_lr)),  # F1 score with safe handling\n",
    "}\n",
    "\n",
    "# Calculate metrics for random forest\n",
    "metrics_rf = {\n",
    "    \"accuracy\": float(accuracy_score(y_test, y_pred_rf)),  # Same metric structure for comparison\n",
    "    \"precision\": float(safe_precision(y_test, y_pred_rf)),\n",
    "    \"recall\": float(safe_recall(y_test, y_pred_rf)),\n",
    "    \"f1\": float(safe_f1(y_test, y_pred_rf)),\n",
    "}\n",
    "\n",
    "# Print results for both models\n",
    "print(\"Logistic Regression:\", metrics_lr)  # Display LR metrics\n",
    "print(\"Random Forest:\", metrics_rf)  # Display RF metrics for comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e6dea325",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Confusion matrices\n",
    "cm_lr = confusion_matrix(y_test, y_pred_lr)  # Compute confusion matrix for logistic regression predictions\n",
    "cm_rf = confusion_matrix(y_test, y_pred_rf)  # Compute confusion matrix for random forest predictions\n",
    "\n",
    "classes = [str(c) for c in sorted(pd.unique(y_test))]  # Extract and sort unique class labels as strings\n",
    "\n",
    "def plot_confusion_matrix(cm, classes, title):\n",
    "    plt.figure()  # Create new figure\n",
    "    plt.imshow(cm, interpolation='nearest')  # Display matrix as image with nearest neighbor interpolation\n",
    "    plt.title(title)  # Set plot title\n",
    "    plt.colorbar()  # Add color scale bar\n",
    "    tick_marks = np.arange(len(classes))  # Create tick positions based on number of classes\n",
    "    plt.xticks(tick_marks, classes, rotation=45, ha='right')  # Set x-ticks with rotated labels for readability\n",
    "    plt.yticks(tick_marks, classes)  # Set y-ticks with class labels\n",
    "    for i in range(cm.shape[0]):  # Iterate through rows\n",
    "        for j in range(cm.shape[1]):  # Iterate through columns\n",
    "            plt.text(j, i, format(cm[i, j], 'd'), horizontalalignment=\"center\")  # Add count values to each cell\n",
    "    plt.ylabel('True label')  # Label y-axis\n",
    "    plt.xlabel('Predicted label')  # Label x-axis\n",
    "    plt.tight_layout()  # Adjust layout to prevent label clipping\n",
    "\n",
    "plot_confusion_matrix(cm_lr, classes, \"Confusion Matrix - Logistic Regression\")  # Plot LR confusion matrix\n",
    "plot_confusion_matrix(cm_rf, classes, \"Confusion Matrix - Random Forest\")  # Plot RF confusion matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b34c724e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC curves (if binary classification and proba is available)\n",
    "if pd.Series(y_test).nunique() == 2:  # Check if it's a binary classification problem\n",
    "    plt.figure()  # Create new figure for ROC plot\n",
    "    try:\n",
    "        y_prob_lr = logreg.predict_proba(X_test)[:, 1]  # Get positive class probabilities from logistic regression\n",
    "        fpr_lr, tpr_lr, _ = roc_curve(y_test, y_prob_lr)  # Calculate ROC curve points\n",
    "        auc_lr = auc(fpr_lr, tpr_lr)  # Calculate AUC score\n",
    "        plt.plot(fpr_lr, tpr_lr, label=f\"LogReg (AUC={auc_lr:.3f})\")  # Plot ROC curve with AUC label\n",
    "    except Exception:  # Handle cases where predict_proba fails\n",
    "        pass  # Silently skip this model\n",
    "\n",
    "    try:\n",
    "        y_prob_rf = rf.predict_proba(X_test)[:, 1]  # Get positive class probabilities from random forest\n",
    "        fpr_rf, tpr_rf, _ = roc_curve(y_test, y_prob_rf)  # Calculate ROC curve points\n",
    "        auc_rf = auc(fpr_rf, tpr_rf)  # Calculate AUC score\n",
    "        plt.plot(fpr_rf, tpr_rf, label=f\"RandomForest (AUC={auc_rf:.3f})\")  # Plot ROC curve with AUC label\n",
    "    except Exception:  # Handle cases where predict_proba fails\n",
    "        pass  # Silently skip this model\n",
    "\n",
    "    plt.plot([0, 1], [0, 1], linestyle=\"--\")  # Plot diagonal line representing random classifier\n",
    "    plt.xlabel(\"False Positive Rate\")  # Label x-axis\n",
    "    plt.ylabel(\"True Positive Rate\")  # Label y-axis\n",
    "    plt.title(\"ROC Curves\")  # Set plot title\n",
    "    plt.legend(loc=\"lower right\")  # Add legend in bottom right corner\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
